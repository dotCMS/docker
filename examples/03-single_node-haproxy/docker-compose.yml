version: '3.5'

# For this configuration to work properly, you must have a license file mounted into the dotcms service.
# Without a license file, the external ES service will NOT be recognized and utilized.  All documents will
# indexed on the dotcms node directly and will not be persisted between restarts.

networks:
  http_net:
  db_net:
  es_net:

volumes:
  cms-shared:
  #cms-local:
  dbdata:
  esdata:

secrets:
   connection_db_base_url:
    external: true
    name: connection_db_base_url
   connection_db_driver:
    external: true
    name: connection_db_driver
   connection_db_leak_detection_threshold:
    external: true
    name: connection_db_leak_detection_threshold
   connection_db_max_idle:
    external: true
    name: connection_db_max_idle
   connection_db_max_total:
    external: true
    name: connection_db_max_total
   connection_db_max_wait:
    external: true
    name: connection_db_max_wait
   connection_db_name:
    external: true
    name: connection_db_name
   connection_db_password:
    external: true
    name: connection_db_password
   connection_db_username:
    external: true
    name: connection_db_username
   connection_db_validation_query:
    external: true
    name: connection_db_validation_query
    ##Uncomment these lines in case you need to define a default transaction isolation
   #connection_db_default_transaction_isolation:
   # external: true
   # name: connection_db_default_transaction_isolation

services:
  http:
    image: dotcms/haproxy:1.8-os
    environment:
      "HAPROXY_CERT_PATH": '/certs/'
#      "HAPROXY_REDIRECT_HTTPS_ALL": 'true'
#      "HAPROXY_MAINTENANCE_PAGE": '/srv/config/503.http'

    ports:
      - "80:8080"
      - "443:8443"
#    volumes:
#      - /data/dotcms/haproxy/certs:/certs:ro
#      - /data/dotcms/haproxy/503.http:/srv/config/503.http:ro

    networks:
      - http_net

  elasticsearch:
    image: gcr.io/cicd-246518/es-open-distro:1.3.0
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      "PROVIDER_ELASTICSEARCH_HEAP_SIZE": '1500m'
      "PROVIDER_ELASTICSEARCH_DNSNAMES": 'elasticsearch'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_MIN": '1'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_STEP": '1'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_MAX": '2'
      "ES_ADMIN_PASSWORD": 'admin'
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - es_net

  dotcms:
    image: dotcms/dotcms:latest
    environment:
      "CMS_HEAP_SIZE": '2g'
      "CMS_JAVA_OPTS": '-XX:+PrintFlagsFinal'
      "PROVIDER_DB_DNSNAME": 'db'
      "PROVIDER_ELASTICSEARCH_ENDPOINTS": 'https://elasticsearch:9200'
      "ES_ADMIN_PASSWORD": 'admin'
    depends_on:
      - elasticsearch
      - db
      - http
    volumes:
      - cms-shared:/data/shared
      #- [serverpath]/license.dat:/data/local/dotsecure/license/license.dat
      #- [serverpath]/license.zip:/data/shared/assets/license.zip
    networks:
      - db_net
      - http_net
      - es_net
    secrets:
      - connection_db_base_url
      - connection_db_driver
      - connection_db_leak_detection_threshold
      - connection_db_max_idle
      - connection_db_max_total
      - connection_db_max_wait
      - connection_db_password
      - connection_db_username
      - connection_db_validation_query

  db:
    image: postgres:11
    ports:
      - "15432:5432"
    command: postgres -c 'max_connections=200'
    environment:
        #Comment these 3 lines if you want to use docker secrets (POSTGRES_PASSWORD, POSTGRES_USER, POSTGRES_DB)
        "POSTGRES_USER": 'dotcmsdbuser'
        "POSTGRES_PASSWORD": 'password'
        "POSTGRES_DB": 'dotcms'
        #Uncomment these 3 lines if you want to use docker secrets (POSTGRES_PASSWORD_FILE, POSTGRES_USER_FILE, POSTGRES_DB_FILE)
        #"POSTGRES_PASSWORD_FILE": /run/secrets/connection_db_password
        #"POSTGRES_USER_FILE": /run/secrets/connection_db_username
        #"POSTGRES_DB_FILE": /run/secrets/connection_db_name
    secrets:
      - connection_db_name
      - connection_db_password
      - connection_db_username
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - db_net
